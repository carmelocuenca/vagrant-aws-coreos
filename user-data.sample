#cloud-config

---
coreos:
  etcd2:
    advertise-client-urls: http://$public_ipv4:2379
    initial-advertise-peer-urls: http://$private_ipv4:2380
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001
    discovery: https://discovery.etcd.io/4932013f8d8a537e37643af2131daf21
  fleet:
    public-ip: "$public_ipv4"
    metadata: host=hello-world
  flannel:
    interface: "$public_ipv4"
  units:
  - name: etcd2.service
    command: start
  - name: fleet.service
    command: start
    enable: true
  - name: flanneld.service
    drop-ins:
    - name: 50-network-config.conf
      content: |
        [Service]
        ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config \
          '{ "Network": "10.0.0.0/16" }'
    command: start
  - name: docker-tcp.socket
    command: start
    enable: true
    content: |
      [Unit]
      Description=Docker Socket for the API

      [Socket]
      ListenStream=2375
      Service=docker.service
      BindIPv6Only=both

      [Install]
      WantedBy=sockets.target
  - name: postgresql.fleet.service
    command: start
    content: |
      [Unit]
      Description=A fleet postgresql unit

      [Service]
      Type=oneshot
      ExecStartPre=/bin/sh -c "sleep 10"
      ExecStart=/usr/bin/fleetctl start /home/core/postgresql.service
  - name: nginx.fleet.service
    command: start
    content: |
      [Unit]
      Description=A fleet nginx unit

      [Service]
      Type=oneshot
      ExecStartPre=/bin/sh -c "sleep 10"
      ExecStart=/usr/bin/fleetctl start /home/core/nginx.service
  - name: hello-world.fleet.service
    command: start
    content: |
      [Unit]
      Description=A fleet example unit

      [Service]
      Type=oneshot
      ExecStartPre=/bin/sh -c "sleep 10"
      ExecStart=/usr/bin/fleetctl start /home/core/hello-world.service
write_files:
- path: "/home/core/etc/postgres-credentials.env"
  owner: core:core
  permissions: '0644'
  content: |
    POSTGRES_USER=postgres
    POSTGRES_PASSWORD=postgres
- path: "/home/core/etc/nginx/nginx.conf"
  owner: core:core
  permissions: '0644'
  content: |
    server {
      listen 80;
      root /usr/src/app/public;
      location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        try_files $uri /page_cache/$uri /page_cache/$uri.html @app;
      }
      location @app{
        proxy_pass http://app:9292;
        break;
      }
    }
- path: "/home/core/usr/src/app/public/index.html"
  owner: core:core
  permissions: '0644'
  content: |
    <p>Hello World!</p>
- path: "/home/core/nginx.service"
  owner: core:core
  permissions: '0644'
  content: |
    [Unit]
    Description=some-nginx container that runs a reverse proxy server and a web server
    After=docker.service
    Requires=docker.service

    [Service]
    TimeoutStartSec=0
    ExecStartPre=-/usr/bin/docker kill some-nginx
    ExecStartPre=-/usr/bin/docker rm some-nginx
    ExecStartPre=/usr/bin/docker pull nginx
    ExecStart=/usr/bin/docker run --rm --name some-nginx \
      -v "/home/core/etc/nginx/nginx.conf:/etc/nginx/conf.d/default.conf" \
      -p "80:80" -v "/home/core/usr/src/app/public:/usr/src/app/public" nginx
    ExecStop=/usr/bin/docker stop some-nginx

    [X-Fleet]
    MachineMetadata=host=hello-world
- path: "/home/core/postgresql.service"
  owner: core:core
  permissions: '0644'
  content: |
    [Unit]
    Description=PostgreSQL database
    After=docker.service
    Requires=docker.service

    [Service]
    TimeoutStartSec=0
    EnvironmentFile=/home/core/etc/postgres-credentials.env
    ExecStartPre=-/usr/bin/docker kill some-postgres
    ExecStartPre=-/usr/bin/docker rm some-postgres
    ExecStartPre=/usr/bin/docker pull postgres
    ExecStart=/usr/bin/docker run --rm --name some-postgres \
      -e "POSTGRES_USER=${POSTGRES_USER}" -e "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" \
      -p "5432:5432" postgres
    ExecStop=/usr/bin/docker stop some-postgres

    [X-Fleet]
    MachineMetadata=host=hello-world
- path: "/home/core/hello-world.service"
  owner: core:core
  permissions: '0644'
  content: |
    [Unit]
    Description=Hello World! Service
    After=docker.service
    Requires=docker.service

    [Service]
    TimeoutStartSec=0
    ExecStartPre=/usr/bin/docker pull busybox
    ExecStartPre=-/usr/bin/docker rm hello-world
    ExecStart=/usr/bin/docker run --rm --name  hello-world busybox /bin/sh -c \
      "while true; do echo %h: Hello World!; sleep 15; done"
    ExecStop=/usr/bin/docker stop hello-world

    [X-Fleet]
    Global=true
